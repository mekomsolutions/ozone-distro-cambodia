<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ozonehis</groupId>
    <artifactId>maven-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath></relativePath>
  </parent>

  <artifactId>ozone-cambodia</artifactId>
  <version>1.8.0-SNAPSHOT</version>
  <name>Ozone Cambodia</name>
  <description>Ozone distribution for Cambodia</description>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>

    <analyticsQueriesVersion>1.1.0</analyticsQueriesVersion>

    <supersetConfigsArtifactId>ozone-cambodia-superset-configs</supersetConfigsArtifactId>
    <analyticQueriesArtifactId>analytics-queries</analyticQueriesArtifactId>

    <!-- Classifier for the dependency report artifact -->
    <dependencyReportClassifier>dependencies</dependencyReportClassifier>
  </properties>

  <modules>
    <module>configs/superset</module>
  </modules>

  <dependencies>

    <!-- Ozone Cambodia Superset configs sub-module -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>${supersetConfigsArtifactId}</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>

    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>${analyticQueriesArtifactId}</artifactId>
      <version>${analyticsQueriesVersion}</version>
      <type>zip</type>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- Unpack Ozone Cambodia Superset configs -->
          <execution>
            <id>Unpack Cambodia Superset configs sub-module</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/distro/configs/superset</outputDirectory>
              <includeArtifactIds>${supersetConfigsArtifactId}</includeArtifactIds>
            </configuration>
          </execution>
          <!-- Copy Ozone Analytics queries -->
          <execution>
            <id>Ozone Analytics queries</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/distro/configs/analytics/</outputDirectory>
              <includeArtifactIds>${analyticQueriesArtifactId}</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <!-- Exclude files from Ozone -->
            <id>Exclude unneeded Ozone files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/ozone</directory>
                  <excludes>
                    <exclude>distro/configs/**/address*/*demo.*</exclude>
                    <exclude>distro/configs/**/concepts/*demo.csv</exclude>
                    <exclude>distro/configs/**/program*</exclude>
                    <exclude>distro/configs/**/ampathforms/</exclude>
                    <exclude>distro/configs/**/ampathformstranslations/</exclude>
                    <exclude>distro/configs/**/appointment*/</exclude>
                    <exclude>distro/configs/**/attributetypes/</exclude>
                    <exclude>distro/configs/**/globalproperties/*demo.xml</exclude>
                    <exclude>distro/configs/**/drugs/</exclude>
                    <exclude>distro/configs/**/locations/</exclude>
                    <exclude>distro/configs/**/patientidentifiertypes/</exclude>
                    <exclude>distro/configs/**/personattributetypes/</exclude>
                    <exclude>distro/configs/**/visittypes*</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Override the inherited Maven Parent plugin execution to exclude Superset configs -->
            <!-- Override with local config files -->
            <id>Copy local resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/distro/configs</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/configs</directory>
                  <excludes>
                    <exclude>.gitkeep</exclude>
                    <exclude>superset/</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!-- Compile a dependency report -->
      <plugin>
        <groupId>net.mekomsolutions.maven.plugin</groupId>
        <artifactId>dependency-tracker-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Compile dependency report</id>
            <phase>compile</phase>
            <goals>
              <goal>track</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Attach the dependency report to the build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Attach the dependency report</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>
                    ${project.build.directory}/${project.artifactId}-${project.version}-dependencies.txt</file>
                  <type>txt</type>
                  <classifier>${dependencyReportClassifier}</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>mks-nexus-public</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <name>Mekom Solutions Nexus repo for releases</name>
      <id>mks-nexus-public-releases</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <name>Mekom Solutions Nexus repo for snapshots</name>
      <id>mks-nexus-public-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <!--
    Disable OpenMRS Initalizer Validator due to an error when running it consequently in 2 Maven
  sub-modules.
    OpennMRS config validation will be done in the child Maven project "prod" which should validate
  this project to a great extent.
    See Slack conversation:
  https://mekomsolutions.slack.com/archives/G421UNF5L/p1715787009629219?thread_ts=1715774419.673979&cid=G421UNF5L
  -->
  <!-- <profiles>
    <profile>
      <id>validator</id>
      <activation>
        <jdk>1.8</jdk>
        <property>
          <name>env.CI</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <id>Copy OpenMRS Initializer configs for validation</id>
                  <phase>pre-integration-test</phase>
                  <configuration>
                    <target>
                      <copy todir="${project.build.directory}/validator/configuration">
                        <fileset
  dir="${project.build.directory}/${project.artifactId}-${project.version}/distro/configs/openmrs/initializer_config"/>
                      </copy>
                    </target>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          <plugin>
            <groupId>org.openmrs.maven.plugins</groupId>
            <artifactId>openmrs-packager-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>Validate OpenMRS configuration</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>validate-configurations</goal>
                </goals>
                <configuration>
                  <sourceDir>${project.build.directory}/validator/configuration</sourceDir>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles> -->
</project>
